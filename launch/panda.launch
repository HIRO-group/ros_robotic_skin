<?xml version="1.0" ?>
<!-- launch file for control of the real -->
<!-- franka panda robot arm. -->
<launch>
  <!-- robot ip of the panda must be specified -->
  <arg name="robot_ip" />
  <arg name="load_gripper" default="true" />

  <!-- side note - we need to modify the original franka control to also have the joint trajectory controller -->
  <include file="$(find franka_control)/launch/franka_control.launch" >
    <arg name="robot_ip" value="$(arg robot_ip)" />
    <arg name="load_gripper" value="$(arg load_gripper)" />
  </include>

  <arg name="constants_file_yaml" default="$(find ros_robotic_skin)/param/realworld.yaml"/>
  <rosparam command="load" file="$(arg constants_file_yaml)"/>

  <rosparam command="load" file="$(find hiro_ros_arm_controller)/param/panda_joint_controllers.yaml"/>
  <node name="panda_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_joint_position_controller"/>
  <node name="controller_spawn_stopped" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="--stopped panda_joint_velocity_controller" />

  <node pkg="ros_robotic_skin" name="fake_imu_publisher0" type="fake_imu_publisher.py" output="screen" args="0"/>
  <node name = "PlotJuggler" pkg = "plotjuggler" type = "PlotJuggler" args="--layout $(find ros_robotic_skin)/config/plotjuggler/verify_joint_velocities_in_real.xml"/>
</launch>
