<!-- Launch file for the implementation of the flacco paper -->

<launch>

    <!-- Command line arguments -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="false"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="load_gripper" default="true"/>

    <!-- Load URDF in the parameter server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find ros_robotic_skin)/robots/panda_arm_hand_proximity.urdf.xacro"/>

    <!-- Launch Gazebo with an empty world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Add Panda to Gazebo -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
          args="-param robot_description -urdf -model panda"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find panda_simulation)/config/panda_control.yaml" command="load"/>


    <!-- Load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_joint_trajectory_controller joint_state_controller" />
    <node name="controller_spawn" pkg="controller_manager" type="spawner" respawn="false" output="screen"
            args="--stopped panda_joint1_position_controller panda_joint2_position_controller
            panda_joint3_position_controller panda_joint4_position_controller panda_joint5_position_controller
            panda_joint6_position_controller panda_joint7_position_controller
            panda_joint1_velocity_controller panda_joint2_velocity_controller
            panda_joint3_velocity_controller panda_joint4_velocity_controller
            panda_joint5_velocity_controller panda_joint6_velocity_controller
            panda_joint7_velocity_controller" />
    <node if="$(arg load_gripper)" name="controller_spawner_hand" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="panda_hand_controller" />

    <!-- Convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" >
    </node>

    <!-- Add Params YAML File-->
    <arg name="constants_file_yaml" default="$(find ros_robotic_skin)/config/params.yaml"/>
    <rosparam command="load" file="$(arg constants_file_yaml)"/>

    <!-- Rviz -->
    <node name="$(anon rviz)" pkg="rviz" type="rviz" respawn="false"
        args="-d $(find ros_robotic_skin)/config/rviz.rviz" output="screen"/>

    <!-- KDL node -->
    <node name="KDL_server" pkg="ros_robotic_skin" type="KDL_server"/>

    <!-- Control points visualizer -->
    <!-- <node pkg="ros_robotic_skin" type="control_point_visualizer"
          name="control_point_visualizer" /> -->

</launch>